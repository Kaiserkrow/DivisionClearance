<?php
require('fpdf/fpdf.php');
include "connection.php";

if (!isset($_GET['ids'])) {
    die("No entries selected.");
}

$ids = explode(",", $_GET['ids']);
$ids = array_map('intval', $ids);
$idList = implode(",", $ids);

$result = $conn->query("SELECT * FROM entries WHERE id IN ($idList) ORDER BY id DESC");

class PDF_Clearance extends FPDF {

    function Header() {
        // Keep your original header exactly as it is
        $this->Image('asset/img/deped_logo.png', 70, 14, 25);
        $this->Image('asset/img/cam-norte.png', 200, 14, 25);

        $this->SetTextColor(5, 5, 5);
        $this->SetFont('Times', 'B', 12);
        $this->Ln(5);
        $this->Cell(0, 5, 'Republic of the Philippines', 0, 1, 'C');
        $this->Cell(0, 5, 'Department of Education', 0, 1, 'C');
        $this->Cell(0, 5, 'Region V - Bicol', 0, 1, 'C');
        $this->Cell(0, 5, 'Schools Division Office', 0, 1, 'C');
        $this->Cell(0, 5, 'Camarines Norte', 0, 1, 'C');
        $this->Ln(5);
    }

    function Footer() {
        // Position at 15mm from bottom
        $this->SetY(-15);
        
        // Set font for footer text
        $this->SetFont('Arial', 'I', 10);
        $this->SetTextColor(120, 120, 120);
        
        // Generated by text - center
        $this->Cell(0, 8, '*Generated by DepEd Division Clearance System', 0, 0, 'C');
        
        // Page number - right aligned
        $this->Cell(0, 8, 'Page ' . $this->PageNo() . ' of {nb}', 0, 1, 'R');
    }

    function TableHeader($header, $widths) {
        // Add "Clearance Information" title
        $this->SetFont('Arial', 'B', 14);
        $this->SetTextColor(0, 0, 0);
        $this->Cell(0, 10, 'CLEARANCE INFORMATION', 0, 1, 'C');
        $this->Ln(3);
        
        // Header
        $this->SetFillColor(230, 230, 230);
        $this->SetFont('Arial', 'B', 9);
        foreach ($header as $i => $col) {
            $this->Cell($widths[$i], 8, $col, 1, 0, 'C', true);
        }
        $this->Ln();
    }

    function Row($data, $widths, $isEvenRow = false) {
        $nb = 0;
        // Find max number of lines in this row
        for ($i = 0; $i < count($data); $i++) {
            $nb = max($nb, $this->NbLines($widths[$i], $data[$i]));
        }
        $h = 5 * $nb; // Row height

        // Check if we need a new page
        if ($this->GetY() + $h > $this->PageBreakTrigger) {
            return false; // Indicate that row doesn't fit
        }

        // Set alternating row colors (stripes)
        if ($isEvenRow) {
            $this->SetFillColor(255, 255, 255); // White for even rows
        } else {
            
            $this->SetFillColor(245, 245, 245); // Light gray for odd rows
        }

        // Draw cells
        for ($i = 0; $i < count($data); $i++) {
            $w = $widths[$i];
            $x = $this->GetX();
            $y = $this->GetY();
            
            // Fill the cell background with stripe color
            $this->Rect($x, $y, $w, $h, 'F');
            // Draw the border
            $this->Rect($x, $y, $w, $h);
            
            $this->MultiCell($w, 5, $data[$i], 0, 'L');
            $this->SetXY($x + $w, $y);
        }
        $this->Ln($h);
        return true; // Row was successfully added
    }

    function NbLines($w, $txt) {
        $cw = &$this->CurrentFont['cw'];
        if ($w == 0)
            $w = $this->w - $this->rMargin - $this->x;
        $wmax = ($w - 2 * $this->cMargin) * 1000 / $this->FontSize;
        $s = str_replace("\r", '', $txt);
        $nb = strlen($s);
        if ($nb > 0 && $s[$nb - 1] == "\n")
            $nb--;
        $sep = -1;
        $i = 0;
        $j = 0;
        $l = 0;
        $nl = 1;
        while ($i < $nb) {
            $c = $s[$i];
            if ($c == "\n") {
                $i++;
                $sep = -1;
                $j = $i;
                $l = 0;
                $nl++;
                continue;
            }
            if ($c == ' ')
                $sep = $i;
            $l += $cw[$c];
            if ($l > $wmax) {
                if ($sep == -1) {
                    if ($i == $j)
                        $i++;
                } else
                    $i = $sep + 1;
                $sep = -1;
                $j = $i;
                $l = 0;
                $nl++;
            } else
                $i++;
        }
        return $nl;
    }

    function FancyTable($header, $data) {
        $widths = [33, 20, 22, 30, 25, 22, 22, 37, 33, 33];
        
        // Add initial table header
        $this->TableHeader($header, $widths);

        // Rows with alternating colors
        $this->SetFont('Arial', '', 9);
        $rowIndex = 0;
        
        foreach ($data as $row) {
            $isEvenRow = ($rowIndex % 2 == 0);
            
            // Try to add the row
            $rowAdded = $this->Row($row, $widths, $isEvenRow);
            
            // If row doesn't fit, add new page and header, then add the row
            if (!$rowAdded) {
                $this->AddPage();
                $this->TableHeader($header, $widths);
                $this->SetFont('Arial', '', 9);
                $this->Row($row, $widths, $isEvenRow);
            }
            
            $rowIndex++;
        }
    }
}

$pdf = new PDF_Clearance('L');
$pdf->SetTitle("DepEd Generated Clearance");
$pdf->SetAutoPageBreak(true, 15); // Set auto page break with 15mm margin from bottom
$pdf->AliasNbPages(); // Enable {nb} placeholder for total pages
$pdf->AddPage();

$header = [
    "Full Name", "Position", "District", "Purpose",
    "Date of Action", "Start Date", "End Date", "Remarks",
    "Signed by District", "Signed by Division"
];

$tableData = [];
while ($row = $result->fetch_assoc()) {
    $tableData[] = [
        ucwords(strtolower($row['fullName'])),
        ucfirst($row['position']),
        ucwords(strtolower($row['district'])),
        ucwords(strtolower($row['purposeOfClearance'])),
        (!empty($row['dateOfAction']) && $row['dateOfAction'] !== '0000-00-00' ? date("M d, Y", strtotime($row['dateOfAction'])) : 'N/A'),
        (!empty($row['startDate']) && $row['startDate'] !== '0000-00-00' ? date("M d, Y", strtotime($row['startDate'])) : 'N/A'),
        (!empty($row['endDate']) && $row['endDate'] !== '0000-00-00' ? date("M d, Y", strtotime($row['endDate'])) : 'N/A'),
        ucfirst($row['additionalNote']),
        date("F d, Y", strtotime($row['schoolDistrictSigned'])),
        date("F d, Y", strtotime($row['divisionSigned']))
    ];
}

$pdf->FancyTable($header, $tableData);

$pdf->Output();

?>